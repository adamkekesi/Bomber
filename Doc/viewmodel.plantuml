@startuml


class CellViewModel {
    - bombPlaced: bool
    + BombPlaced: bool
    + PlayerVisible: bool
    + EnemyVisible: bool
    + WallVisible: bool
    + X: int
    + Y: int
    + XY: Tuple<int, int>
    --properties--
    + Field(): IField?
}

class BomberViewModel {
    --Fields--
    - enemiesKilled: int
    - time: TimeSpan
    - isMobile:bool
    --Properties--
    + EnemiesKilled(): int
    + Time(): TimeSpan
    + Cells(): ObservableCollection<CellViewModel>
    + GameStarted(): bool
    + MapSize(): int
    + Paused(): boolean
    + Running(): boolean
    + ShowControls(): boolean
    --Events--
    + LoadMap(): EventHandler?
    --Commands--
    + MoveCommand(): RelayCommand<string>
    + PlantBombCommand(): RelayCommand
    + PauseToggleCommand(): RelayCommand
    + LoadMapCommand(): RelayCommand
    --Constructor--
    + BomberViewModel(isMobile: boolean)
    --Methods--
    + StartGame(model: BomberModel)
    --Event handlers--
    - OnTimeElapsed(sender: EventArgs)
    - OnStatUpdated(sender: EventArgs)
    - OnMapChanged(sender: Map.MapChangedEventArgs)
    - OnGameOver(sender: EventArgs)
    - OnBombsChanged(sender: BombCollection.BombsChangedEventArgs)
    - OnMove(dir:string?)
    - OnPlantBomb()
    - OnPauseToggle()
    --Event methods--
    - OnLoadMap()
}

interface IField{

}
CellViewModel -- "0..1\n-field" IField
BomberViewModel -- "0..1\n-model" BomberModel

class BomberModel{

}

BomberViewModel o-- "nxn\n+Cells" CellViewModel

@enduml